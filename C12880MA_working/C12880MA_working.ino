/*
   Macro Definitions
*/
#define SPEC_TRG         A0 // trigger pulse
#define SPEC_ST          A1 // start pulse
#define SPEC_CLK         A2 // clock pulse
#define SPEC_VIDEO       A3 // video output
#define WHITE_LED        A4
#define LASER_404        A5

#define delayTime 0

#define SPEC_CHANNELS    288 // New Spec Channel
uint16_t data[SPEC_CHANNELS];

uint32_t exposure = 200;
uint16_t maximum = 0;
uint16_t prev_max = 0;
uint16_t exposure_min = 2;

void setup() {

  //Set desired pins to OUTPUT
  pinMode(SPEC_CLK, OUTPUT);
  pinMode(SPEC_ST, OUTPUT);
  pinMode(LASER_404, OUTPUT);
  pinMode(WHITE_LED, OUTPUT);

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH // Set SPEC_CLK High
  PORTC = PORTC & B11111101; //SPEC_ST LOW // Set SPEC_ST Low

  Serial.begin(115200); // Baud Rate set to 115200

}

/*
   This functions reads spectrometer data from SPEC_VIDEO
   Look at the Timing Chart in the Datasheet for more info
*/
void readSpectrometer() {
  // Start clock cycle and set start pulse to signal start
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  //set start pulse high
  PORTC = PORTC | B00000010; //SPEC_ST HIGH


  // perform ST high for specific number of clock cycles, minimum 6
  for (int i = 0; i < exposure; i++) {
    PORTC = PORTC | B00000100; //SPEC_CLK HIGH
    PORTC = PORTC & B11111011; // SPEC_CLK LOW
  }

  //Set SPEC_ST to low
  PORTC = PORTC & B11111101; //SPEC_ST LOW

  //85 clock cycles
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  //three clock cycles before the actual read
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  //Read from SPEC_VIDEO
  for (int i = 0; i < SPEC_CHANNELS; i++) {

    data[i] = analogRead(SPEC_VIDEO);
    PORTC = PORTC | B00000100; //SPEC_CLK HIGH
    PORTC = PORTC & B11111011; // SPEC_CLK LOW

  }

  //7 clocks to reset

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  PORTC = PORTC | B00000100; //SPEC_CLK HIGH
  PORTC = PORTC & B11111011; // SPEC_CLK LOW

  //leave clock high for next cycle for some reason
  PORTC = PORTC | B00000100; //SPEC_CLK HIGH

}

/*
   The function below prints out data to the terminal or
   processing plot
*/
void printData() {

  maximum = 0;

  for (int i = 0; i < SPEC_CHANNELS; i++) {
    if (data[i] > maximum) {
      maximum = data[i];
    };
    Serial.print(data[i]);
    Serial.print(',');
  }

  Serial.print("\n");

  //exposure = exposure * ((850-maximum)+850)/850;
  
  if (abs(850 - maximum) > 100) {
    exposure = exposure * ((850 - maximum) + 850) / 850;

    if (exposure < exposure_min) {
      exposure = exposure_min;
    } else if (exposure > 100000) {
      exposure = 100000;
    };
  }

  prev_max = maximum;
}

void loop() {

  readSpectrometer();
  printData();
  //delay(10);

}
